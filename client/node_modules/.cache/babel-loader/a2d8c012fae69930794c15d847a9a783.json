{"ast":null,"code":"const {\n  CREATE_POST,\n  POST_ERROR,\n  LIST_POST,\n  CURRENT_POST,\n  ONEPOST,\n  EDITONEPOST\n} = require(\"../types/post_types\");\n\nconst initialstate = {\n  msg: null,\n  errors: null,\n  posts: [],\n  currentpost: [],\n  post: null,\n  newPost: null\n};\n\nconst postReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case CREATE_POST:\n      return { ...state,\n        newPost: action.payload.newPost\n      };\n\n    case EDITONEPOST:\n      return { ...state,\n        newPost: action.payload.Edited\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        errors: action.payload.errors\n      };\n\n    case LIST_POST:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CURRENT_POST:\n      return { ...state,\n        currentpost: action.payload\n      };\n\n    case ONEPOST:\n      return { ...state,\n        post: action.payload.OnePost\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/Users/HAMZA/Desktop/GOMYCODE/authBackendFront/client/src/redux/reducres/postReducre.jsx"],"names":["CREATE_POST","POST_ERROR","LIST_POST","CURRENT_POST","ONEPOST","EDITONEPOST","require","initialstate","msg","errors","posts","currentpost","post","newPost","postReducer","state","action","type","payload","Edited","OnePost"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,YAAtC;AAAoDC,EAAAA,OAApD;AAA6DC,EAAAA;AAA7D,IAA6EC,OAAO,CAAC,qBAAD,CAA1F;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,IADc;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,WAAW,EAAE,EAJM;AAKnBC,EAAAA,IAAI,EAAE,IALa;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFnB,OAAP;;AAIF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeC;AAFnB,OAAP;;AAIF,SAAKlB,UAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,MAAM,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAFlB,OAAP;;AAIF,SAAKP,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACE;AAFf,OAAP;;AAIF,SAAKd,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeE;AAFhB,OAAP;;AAIF;AACE,aAAOL,KAAP;AAhCJ;AAkCD,CAnCD;;AAoCA,eAAeD,WAAf","sourcesContent":["const { CREATE_POST, POST_ERROR, LIST_POST, CURRENT_POST, ONEPOST, EDITONEPOST } = require(\"../types/post_types\");\r\nconst initialstate = {\r\n  msg: null,\r\n  errors: null,\r\n  posts: [],\r\n  currentpost: [],\r\n  post: null,\r\n  newPost: null,\r\n};\r\nconst postReducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST:\r\n      return {\r\n        ...state,\r\n        newPost: action.payload.newPost,\r\n      };\r\n    case EDITONEPOST:\r\n      return {\r\n        ...state,\r\n        newPost: action.payload.Edited,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        errors: action.payload.errors,\r\n      };\r\n    case LIST_POST:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case CURRENT_POST:\r\n      return {\r\n        ...state,\r\n        currentpost: action.payload,\r\n      };\r\n    case ONEPOST:\r\n      return {\r\n        ...state,\r\n        post: action.payload.OnePost,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}