{"ast":null,"code":"import axios from \"axios\";\nimport { CURRENT_POST, LIST_POST, ONEPOST, POST_ERROR, CREATE_POST } from \"../types/post_types\";\nexport const createpost = ({\n  buildname,\n  description,\n  photos,\n  partslist,\n  backgroundimage\n}, history) => async dispatch => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  };\n  const formdata = new FormData();\n  formdata.append(\"buildname\", buildname);\n  formdata.append(\"backgroundimage\", backgroundimage);\n  formdata.append(\"description\", description);\n\n  for (var key of Object.keys(photos)) {\n    formdata.append(\"photos\", photos[key]);\n  }\n\n  formdata.append(\"photos\", photos);\n  formdata.append(\"partslist\", partslist);\n\n  try {\n    const res = await axios.post(\"/api/posts/CreatePost\", formdata, config); //dispatch({ type: CREATE_POST, payload: res.data });\n\n    dispatch(listpost());\n    await history.push(\"/profile\"); //console.log(res);\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response.data\n    });\n  }\n};\nexport const listpost = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/ListPost\");\n    dispatch({\n      type: LIST_POST,\n      payload: res.data.Posts\n    }); //console.log(res.data.Posts);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const currentPost = () => async dispatch => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  };\n\n  try {\n    const res = await axios.get(\"/api/posts/ListUserPost\", config);\n    dispatch({\n      type: CURRENT_POST,\n      payload: res.data.ListUserPost\n    }); //console.log(res.data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const onePost = (id, history) => async dispatch => {\n  const config = {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  };\n\n  try {\n    const res = await axios.get(`/api/posts/OnePost/${id}`, config);\n    dispatch({\n      type: ONEPOST,\n      payload: res.data\n    });\n    history.push(\"/buildPost\");\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/HAMZA/Desktop/GOMYCODE/authBackendFront/client/src/redux/actions/post_action.jsx"],"names":["axios","CURRENT_POST","LIST_POST","ONEPOST","POST_ERROR","CREATE_POST","createpost","buildname","description","photos","partslist","backgroundimage","history","dispatch","config","headers","Authorization","localStorage","getItem","formdata","FormData","append","key","Object","keys","res","post","listpost","push","error","type","payload","response","data","get","Posts","console","log","currentPost","ListUserPost","onePost","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { CURRENT_POST, LIST_POST, ONEPOST, POST_ERROR, CREATE_POST } from \"../types/post_types\";\r\n\r\nexport const createpost =\r\n  ({ buildname, description, photos, partslist, backgroundimage }, history) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    };\r\n    const formdata = new FormData();\r\n    formdata.append(\"buildname\", buildname);\r\n    formdata.append(\"backgroundimage\", backgroundimage);\r\n    formdata.append(\"description\", description);\r\n    for (var key of Object.keys(photos)) {\r\n      formdata.append(\"photos\", photos[key]);\r\n    }\r\n    formdata.append(\"photos\", photos);\r\n\r\n    formdata.append(\"partslist\", partslist);\r\n    try {\r\n      const res = await axios.post(\"/api/posts/CreatePost\", formdata, config);\r\n      //dispatch({ type: CREATE_POST, payload: res.data });\r\n      dispatch(listpost());\r\n      await history.push(\"/profile\");\r\n\r\n      //console.log(res);\r\n    } catch (error) {\r\n      dispatch({ type: POST_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n\r\nexport const listpost = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts/ListPost\");\r\n    dispatch({ type: LIST_POST, payload: res.data.Posts });\r\n    //console.log(res.data.Posts);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const currentPost = () => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(\"/api/posts/ListUserPost\", config);\r\n    dispatch({ type: CURRENT_POST, payload: res.data.ListUserPost });\r\n    //console.log(res.data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const onePost = (id, history) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.get(`/api/posts/OnePost/${id}`, config);\r\n\r\n    dispatch({ type: ONEPOST, payload: res.data });\r\n    history.push(\"/buildPost\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}